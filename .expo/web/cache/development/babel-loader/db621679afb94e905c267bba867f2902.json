{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ameur/THE-TENT/components/main/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\n\nrequire('firebase/firebase');\n\nexport default function Search() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUser = function fetchUser(search) {\n    firebase.firestore().collection('users').where('name', '>=', search).get().then(function (snapshot) {\n      var queryResult = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(queryResult);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"type here ...\",\n    onChangeText: function onChangeText(search) {\n      return fetchUser(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }\n      }, \"onPress=\", function () {\n        return props.na;\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, item.name));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ameur/THE-TENT/components/main/Search.js"],"names":["React","useState","firebase","require","Search","users","setUsers","fetchUser","search","firestore","collection","where","get","then","snapshot","queryResult","docs","map","doc","data","id","item","props","na","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAE,mBAAF,CAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAChC,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAGA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAC7BN,IAAAA,QAAQ,CAACO,SAAT,GACCC,UADD,CACY,OADZ,EAECC,KAFD,CAEO,MAFP,EAEe,IAFf,EAEqBH,MAFrB,EAGCI,GAHD,GAICC,IAJD,CAIM,UAACC,QAAD,EAAc;AACnB,UAAIC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AAC1C,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA;AAAOA,UAAAA,EAAE,EAAFA;AAAP,WAAcD,IAAd;AACI,OAJa,CAAlB;AAKIb,MAAAA,QAAQ,CAACS,WAAD,CAAR;AACJ,KAXD;AAYA,GAbD;;AAcG,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACT,IAAA,WAAW,EAAC,eADH;AAET,IAAA,YAAY,EAAE,sBAACP,MAAD;AAAA,aAAYD,SAAS,CAACC,MAAD,CAArB;AAAA,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKL,oBAAC,QAAD;AACC,IAAA,UAAU,EAAE,CADb;AAEC,IAAA,UAAU,EAAE,KAFb;AAGC,IAAA,IAAI,EAAEH,KAHP;AAIC,IAAA,UAAU,EAAE;AAAA,UAAEgB,IAAF,QAAEA,IAAF;AAAA,aACX,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU;AAAA,eAAMC,KAAK,CAACC,EAAZ;AAAA,OADV,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,IAAI,CAACG,IAAZ,CAFD,CADW;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALK,CADJ;AAmBH","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native'\n\nimport firebase from 'firebase';\nrequire( 'firebase/firebase' )\n\nexport default function Search() {\n\tconst [users, setUsers] = useState([])\n\n\n\tconst fetchUser = (search) => {\n\t\tfirebase.firestore()\n\t\t.collection('users')\n\t\t.where('name', '>=', search)\n\t\t.get()\n\t\t.then((snapshot) => {\n\t\t\tlet queryResult = snapshot.docs.map(doc => {\n\t\t\t\tconst data = doc.data();\n\t\t\t\tconst id = doc.id;\n\t\t\t\treturn{id, ...data }\n\t\t\t    });\n\t\t\t    setUsers(queryResult);\n\t\t})\n\t}\n    return (\n        <View>\n            <TextInput\n\t\t\tplaceholder=\"type here ...\"\n\t\t\tonChangeText={(search) => fetchUser(search)}/>\n\n\t\t\t<FlatList\n\t\t\t\tnumColumns={1}\n\t\t\t\thorizontal={false}\n\t\t\t\tdata={users}\n\t\t\t\trenderItem={({item}) => (\n\t\t\t\t\t<TouchableOpacity>\n\t\t\t\t\t\tonPress={() => props.na}\n\t\t\t\t\t\t<Text>{item.name}</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t)}\n\t    />\n        </View>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}