{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mahdi/THE-TENT/components/main/Messages.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from \"firebase\";\nimport { Container, Card, UserInfo, UserImgWrapper, UserImg, UserInfoText, UserName, PostTime, MessageText, TextSection } from \"../styles/ MessageStyles\";\nexport default function MessagesScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chats = _useState6[0],\n      setChats = _useState6[1];\n\n  useEffect(function () {\n    var subscriber = firebase.firestore().collection(\"rooms\").where(\"members\", \"array-contains\", firebase.auth().currentUser.uid).onSnapshot(function (querySnapshot) {\n      var rooms = [];\n      querySnapshot.forEach(function (documentSnapshot) {\n        rooms.push(_objectSpread(_objectSpread({}, documentSnapshot.data()), {}, {\n          key: documentSnapshot.id\n        }));\n      });\n      setRooms(rooms);\n      setLoading(false);\n      console.log(rooms);\n    });\n    var allMessages = firebase.firestore().collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"createdAt\", \"desc\").onSnapshot(function (querySnapshot) {\n      var chats = [];\n      querySnapshot.forEach(function (documentSnapshot) {\n        chats.push(_objectSpread({}, documentSnapshot.data()));\n      });\n    });\n    setChats(chats);\n    console.log(chats);\n    return function () {\n      subscriber();\n      allMessages();\n    };\n  }, []);\n  return React.createElement(Container, {\n    styles: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: rooms,\n    keyExtractor: function keyExtractor(room) {\n      return room.roomId.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Chat\", {\n            userName: item.userName\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, React.createElement(UserInfo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, React.createElement(UserImgWrapper, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, React.createElement(UserImg, {\n        source: item.userImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      })), React.createElement(TextSection, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, React.createElement(UserInfoText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, React.createElement(UserName, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, item.userName)), React.createElement(MessageText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, item.lastMessage.msg))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/mahdi/THE-TENT/components/main/Messages.js"],"names":["React","useState","useEffect","firebase","Container","Card","UserInfo","UserImgWrapper","UserImg","UserInfoText","UserName","PostTime","MessageText","TextSection","MessagesScreen","navigation","loading","setLoading","rooms","setRooms","chats","setChats","subscriber","firestore","collection","where","auth","currentUser","uid","onSnapshot","querySnapshot","forEach","documentSnapshot","push","data","key","id","console","log","allMessages","doc","roomId","orderBy","styles","container","room","toString","item","navigate","userName","userImg","lastMessage","msg","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { View, Text, Button, StyleSheet, FlatList } from \"react-native\";\nimport firebase from \"firebase\";\nimport {\n  Container,\n  Card,\n  UserInfo,\n  UserImgWrapper,\n  UserImg,\n  UserInfoText,\n  UserName,\n  PostTime,\n  MessageText,\n  TextSection,\n} from \"../styles/ MessageStyles\";\n\n// [\n\n// {\n//   id: \"1\",\n//   userName: \"Jenny Doe\",\n//   userImg: require(\"../../assets/users/user-3.jpg\"),\n//   messageTime: \"4 mins ago\",\n//   messageText:\n//     \"Hey there, this is my test for a post of my social app in React Native.\",\n// },\n// {\n//   id: \"2\",\n//   userName: \"John Doe\",\n//   userImg: require(\"../../assets/users/user-1.jpg\"),\n//   messageTime: \"2 hours ago\",\n//   messageText:\n//     \"Hey there, this is my test for a post of my social app in React Native.\",\n// },\n// {\n//   id: \"3\",\n//   userName: \"Ken William\",\n//   userImg: require(\"../../assets/users/user-4.jpg\"),\n//   messageTime: \"1 hours ago\",\n//   messageText:\n//     \"Hey there, this is my test for a post of my social app in React Native.\",\n// },\n// {\n//   id: \"4\",\n//   userName: \"Selina Paul\",\n//   userImg: require(\"../../assets/users/user-6.jpg\"),\n//   messageTime: \"1 day ago\",\n//   messageText:\n//     \"Hey there, this is my test for a post of my social app in React Native.\",\n// },\n// {\n//   id: \"5\",\n//   userName: \"Christy Alex\",\n//   userImg: require(\"../../assets/users/user-7.jpg\"),\n//   messageTime: \"2 days ago\",\n//   messageText:\n//     \"Hey there, this is my test for a post of my social app in React Native.\",\n// },\n// ];\n\nexport default function MessagesScreen({ navigation }) {\n  const [loading, setLoading] = useState(true);\n  const [rooms, setRooms] = useState([]);\n  const [chats, setChats] = useState([]);\n\n  useEffect(() => {\n    const subscriber = firebase\n      .firestore()\n      .collection(\"rooms\")\n      .where(\"members\", \"array-contains\", firebase.auth().currentUser.uid)\n      .onSnapshot((querySnapshot) => {\n        const rooms = [];\n\n        querySnapshot.forEach((documentSnapshot) => {\n          rooms.push({\n            ...documentSnapshot.data(),\n            key: documentSnapshot.id,\n          });\n        });\n        setRooms(rooms);\n        setLoading(false);\n        console.log(rooms);\n      });\n\n    const allMessages = firebase\n      .firestore()\n      .collection(\"rooms\")\n      .doc(roomId)\n      .collection(\"messages\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((querySnapshot) => {\n        const chats = [];\n        querySnapshot.forEach((documentSnapshot) => {\n          chats.push({\n            ...documentSnapshot.data(),\n          });\n        });\n      });\n\n      setChats(chats);\n      console.log(chats)\n    return () => {\n      subscriber();\n      allMessages();\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   const unsubscribe = firebase.firestore().collection('rooms').onSnapshot(querySnapshot =>{\n  //     const rooms = querySnapshot.docs.map(documentSnapshot => {\n  //       return{\n  //         _id:documentSnapshot.id,\n  //         // give defaults\n  //         name: '',\n  //         ...documentSnapshot.data()\n  //       }\n  //     })\n  //     setRooms(rooms);\n  //   })\n\n  return (\n    <Container styles={styles.container}>\n      <FlatList\n        data={rooms}\n        keyExtractor={(room) => room.roomId.toString()}\n        // keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <Card\n            onPress={() =>\n              navigation.navigate(\"Chat\", { userName: item.userName })\n            }\n          >\n            <UserInfo>\n              <UserImgWrapper>\n                <UserImg source={item.userImg} />\n              </UserImgWrapper>\n              <TextSection>\n                <UserInfoText>\n                  <UserName>{item.userName}</UserName>\n                  {/* <PostTime>{item.messageTime}</PostTime> */}\n                </UserInfoText>\n                <MessageText>{item.lastMessage.msg}</MessageText>\n              </TextSection>\n            </UserInfo>\n          </Card>\n        )}\n      />\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}