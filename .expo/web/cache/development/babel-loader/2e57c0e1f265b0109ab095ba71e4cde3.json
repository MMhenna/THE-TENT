{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ameur/THE-TENT/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/index\";\nimport MessagesScreen from \"./main/Messages\";\nimport FeedScreen from \"./main/Feed\";\nimport ChatScrenn from \"./main/Chat\";\nimport AddScreen from \"./main/Add\";\nimport ProfileScreen from \"./main/Profile\";\nimport cardPost from \"./main/cardPost\";\nimport Search from \"./\";\nvar Tab = createBottomTabNavigator();\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Messages\",\n        component: MessagesScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"chat-outline\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/home/ameur/THE-TENT/components/Main.js"],"names":["React","Component","createBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","MessagesScreen","FeedScreen","ChatScrenn","AddScreen","ProfileScreen","cardPost","Search","Tab","Main","props","fetchUserPosts","tabBarIcon","color","size","SearchScreen","navigation","tabPress","event","preventDefault","navigate","uid","firebase","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/index\";\n\nimport MessagesScreen from \"./main/Messages\";\nimport FeedScreen from \"./main/Feed\";\nimport ChatScrenn from \"./main/Chat\";\nimport AddScreen from \"./main/Add\";\nimport ProfileScreen from \"./main/Profile\";\nimport cardPost from \"./main/cardPost\";\nimport Search from \"./\"\n\nconst Tab = createBottomTabNavigator();\n\nexport class Main extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n    this.props.fetchUserPosts();\n  }\n  render() {\n    return (\n      <Tab.Navigator>\n        <Tab.Screen\n          name=\"Feed\"\n          component={FeedScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Search\"\n          component={SearchScreen}\n          navigation={this.props.navigation}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Messages\"\n          component={MessagesScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons\n                name=\"chat-outline\"\n                color={color}\n                size={26}\n              />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Add\"\n          component={AddScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          listeners={({ navigation }) => ({\n            tabPress: (event) => {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid,\n              });\n            },\n          })}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons\n                name=\"account-circle\"\n                color={color}\n                size={26}\n              />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  currentUser: store.userState.currentUser,\n});\nconst mapDispatchProps = (dispatch) => \n  bindActionCreators({ fetchUser }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}